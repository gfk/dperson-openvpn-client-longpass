---
name: build

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
      - ".gitignore"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**.md"
      - ".gitignore"
  # cron to run every sunday at 00:00 UTC
  schedule:
    - cron: "0 0 * * 0"

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          pull: true
          load: true
          push: false
          tags: current-build

      - name: Extract alpine version
        id: alpine-version
        run: |
          set -euo pipefail
          
          ALPINE_VERSION=$(docker run --pull=never --rm current-build cat /etc/os-release | \
            grep VERSION_ID | \
            awk -F'=' ' { print $NF } ' | \
            tr -d '[:space:]')
          echo "Extracted ALPINE_VERSION=$ALPINE_VERSION"
          echo "::set-output name=version::$(echo $ALPINE_VERSION)"

      - name: Extract openvpn version
        id: openvpn-version
        run: |
          set -euo pipefail
          
          OPENVPN_VERSION=$(docker run --pull=never --rm current-build openvpn --version | \
            grep -o 'OpenVPN [0-9.]*' | \
            awk '{print $2}' | \
            tr -d '[:space:]')
          echo "Extracted OPENVPN_VERSION=$OPENVPN_VERSION"
          echo "::set-output name=version::$(echo $OPENVPN_VERSION)"

      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=alpine-${{ steps.alpine-version.outputs.version }}-openvpn-${{ steps.openvpn-version.outputs.version }}
            type=raw,value=${{ steps.openvpn-version.outputs.version }}

      - name: Push the images to ghcr.io
#        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
